<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Random Data Generator</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      /* Custom floating animation */
      @keyframes float {
        0% {
          transform: translateY(0);
        }
        50% {
          transform: translateY(-10px);
        }
        100% {
          transform: translateY(0);
        }
      }
      .float {
        animation: float 3s ease-in-out infinite;
      }
    </style>
  </head>
  <body
    class="bg-slate-50 min-h-screen flex items-center justify-center p-4 font-outfit"
  >
    <!-- Background Image -->
    <div
      class="absolute top-0 left-0 w-full h-full bg-cover bg-center opacity-10"
      style="background-image: url('image/bg.jpg')"
    ></div>

    <!-- Decorative elements -->
    <div
      class="absolute top-10 right-10 w-16 h-16 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full opacity-20 float"
    ></div>
    <div
      class="absolute bottom-10 left-10 w-24 h-24 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full opacity-30 float"
      style="animation-delay: 1s"
    ></div>
    <div
      class="absolute top-1/4 left-1/3 w-12 h-12 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-full opacity-20 float"
      style="animation-delay: 2s"
    ></div>

    <!-- Main Card -->
    <div
      class="bg-white max-w-xl w-full rounded-3xl shadow-2xl p-10 relative z-10"
    >
      <!-- Title and Description -->
      <div class="text-center mb-10">
        <h1
          class="text-4xl font-bold mb-4 bg-clip-text text-transparent bg-gradient-to-r from-indigo-600 to-purple-600"
        >
          Random Data Generator
        </h1>
        <p class="text-slate-600 text-lg">
          Generate and populate your database with realistic dummy data in
          seconds.
        </p>
      </div>

      <!-- Generate Button -->
      <button
        id="generateBtn"
        class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 py-4 px-6 rounded-xl text-white font-semibold text-lg hover:opacity-90 transition-all duration-300 flex items-center justify-center gap-2"
      >
        <span>Generate Data</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z"
            clip-rule="evenodd"
          />
        </svg>
      </button>

      <!-- Processing States (Hidden by default) -->
      <div id="processingState" class="mt-6 hidden">
        <div class="flex justify-between items-center mb-2">
          <span class="text-slate-600">Processing...</span>
          <span id="progressPercent" class="text-slate-600">0%</span>
        </div>
        <div class="w-full bg-slate-100 rounded-full h-2 overflow-hidden">
          <div
            id="progressBar"
            class="bg-gradient-to-r from-indigo-600 to-purple-600 h-full w-0"
          ></div>
        </div>
      </div>

      <!-- Success State (Hidden by default) -->
      <div id="successState" class="mt-6 hidden">
        <div class="bg-emerald-50 p-4 rounded-xl flex items-center">
          <div
            class="bg-emerald-500 text-white rounded-full w-10 h-10 flex items-center justify-center mr-4"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                clip-rule="evenodd"
              />
            </svg>
          </div>
          <div>
            <h3 class="font-medium text-emerald-800" id="successMessage">
              10 random data entries have been generated!
            </h3>
            <p class="text-emerald-600 text-sm">
              Data has been saved to your database
            </p>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Simulate generating random data
      const generateBtn = document.getElementById("generateBtn");
      const processingState = document.getElementById("processingState");
      const successState = document.getElementById("successState");
      const progressBar = document.getElementById("progressBar");
      const progressPercent = document.getElementById("progressPercent");

      generateBtn.addEventListener("click", async () => {
        try {
          // Show processing state
          processingState.classList.remove("hidden");
          successState.classList.add("hidden");

          // Simulate progress
          let progress = 0;
          const interval = setInterval(() => {
            progress += 10;
            progressBar.style.width = `${progress}%`;
            progressPercent.textContent = `${progress}%`;

            if (progress >= 100) {
              clearInterval(interval);
              processingState.classList.add("hidden");
              successState.classList.remove("hidden");
            }
          }, 300);

          // Send POST request to /generate
          const response = await fetch("/generate", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (!response.ok) {
            throw new Error("Failed to generate data");
          }

          const result = await response.json();
          console.log(result);
        } catch (error) {
          console.error("Error:", error);
          alert(
            "Failed to generate data. Please check the console for details."
          );
        }
      });
    </script>
  </body>
</html>
